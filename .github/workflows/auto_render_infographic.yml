name: CI - Infographic / render

on:
  push:
    branches: [ "main" ]
    paths:
      - "notebooks/render_infographic.ipynb"
      - "schema/infographic.schema.json"
      - "docs/day3_infographic.json"
      - ".github/workflows/auto_render_infographic.yml"
  pull_request:
    paths:
      - "notebooks/render_infographic.ipynb"
      - "schema/infographic.schema.json"
      - "docs/day3_infographic.json"
      - ".github/workflows/auto_render_infographic.yml"
  workflow_dispatch:

# ✅ allow this workflow to write commits
permissions:
  contents: write

jobs:
  render:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
        # Use the ephemeral repo token for future pushes
        token: ${{ secrets.GITHUB_TOKEN }}

    - name: Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: "3.11"

    - name: Install deps
      run: |
        python -m pip install --upgrade pip
        python -m pip install jupyter nbconvert jsonschema matplotlib pillow

    - name: Ensure folders
      run: mkdir -p docs out

    # PRs: smoke mode (don’t fail the build over notebook hiccups)
    - name: Execute notebook (SMOKE-aware)
      env:
        SMOKE: ${{ github.event_name == 'pull_request' && '1' || '' }}
      run: |
        if [ -n "$SMOKE" ]; then
          echo "Running in SMOKE mode"
          python -m nbconvert --to notebook --execute \
            --ExecutePreprocessor.allow_errors=True \
            --output /tmp/render_out.ipynb notebooks/render_infographic.ipynb
        else
          python -m nbconvert --to notebook --execute \
            --output /tmp/render_out.ipynb notebooks/render_infographic.ipynb
        fi

    - name: Validate infographic JSON (strict on main)
      if: github.event_name != 'pull_request'
      run: |
        if [ -f docs/day3_infographic.json ]; then
          python - <<'PY'
import json, jsonschema, sys
schema = json.load(open('schema/infographic.schema.json'))
data   = json.load(open('docs/day3_infographic.json'))
jsonschema.validate(data, schema)
print("JSON OK")
PY
        else
          echo "No docs/day3_infographic.json; skipping validation."
        fi

    - name: Upload PNG artifact
      uses: actions/upload-artifact@v4
      with:
        name: day3-infographic-png
        path: docs/day3_infographic.png
        if-no-files-found: warn

    # ✅ Push back only on main (PRs skip); use the GITHUB_TOKEN and explicit perms
    - name: Commit updated PNG (main only, when changed)
      if: success() && github.event_name == 'push' && github.ref == 'refs/heads/main'
      env:
        GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        BRANCH: ${{ github.ref_name }}
        REPO: ${{ github.repository }}
      run: |
        set -e
        git config user.name  "github-actions[bot]"
        git config user.email "41898282+github-actions[bot]@users.noreply.github.com"

        # Stage and commit only if changed
        git add docs/day3_infographic.png || true
        if git diff --staged --quiet; then
          echo "No PNG changes to commit."
          exit 0
        fi

        git commit -m "chore(ci): auto-update day3 infographic"
        # Push via token-auth URL to avoid 403
        git push "https://x-access-token:${GH_TOKEN}@github.com/${REPO}" "HEAD:${BRANCH}"

